<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://github.com/shenjiayao-sjy/shenjiayao.github.io/"/>
  <updated>2019-11-28T16:07:31.693Z</updated>
  <id>http://github.com/shenjiayao-sjy/shenjiayao.github.io/</id>
  
  <author>
    <name>shenjiaoyao-sjy</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>js自测</title>
    <link href="http://github.com/shenjiayao-sjy/shenjiayao.github.io/2019/11/28/js%E8%87%AA%E6%B5%8B/"/>
    <id>http://github.com/shenjiayao-sjy/shenjiayao.github.io/2019/11/28/js自测/</id>
    <published>2019-11-28T14:38:43.000Z</published>
    <updated>2019-11-28T16:07:31.693Z</updated>
    
    <content type="html"><![CDATA[<h1 id="js自测题的作答与分析"><a href="#js自测题的作答与分析" class="headerlink" title="js自测题的作答与分析"></a>js自测题的作答与分析</h1><h2 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h2><pre><code>var a = function(){}a.b = 1a.prototype.b = 2a.prototype.c = 3a.prototype.d = 4console.log(a.b) console.log(new a().b)var foo = new a()foo.c = 5console.log(foo.c) console.log(foo.d)</code></pre><p>答：console.log的输出分别为1、2、5、4。</p><p>##2.<br>     var Foo = function(){<br>         this.a = 1<br>         return {<br>             a:2<br>         }<br>     }</p><pre><code>var bar = new Foo()console.log(bar.a)</code></pre><p>答:console.log的输出为2。</p><p>原因为变量bar调用的函数foo所返回的属性a的值为2，即bar所接受的也就a:2。</p><p>##3.<br>    var map = Object.create(null);<br>    console.log(“toString” in map); </p><pre><code>var map = Object.create({a:1});console.log(&quot;toString&quot; in map); console.log(&quot;a&quot; in map); </code></pre><p>##4.<br>    function foo(obj){<br>    return Object.prototype.toString.call(obj).slice(8,-1)}<br>函数foo的作用为</p><p>##5.<br>    var a = {}<br>    a.bar = 2</p><pre><code>Object.defineProperty(a, &quot;foo&quot;,                  { value: &quot;hi&quot;});console.log(delete a.foo)console.log(delete a.bar)a.foo = &quot;world&quot;console.log(a.foo)for (var key in a){console.log(key);}console.log(&quot;foo&quot; in a);console.log(&quot;bar&quot; in a);</code></pre><p>##6.<br>    var a = 1;</p><pre><code>function test() {    a = 0;    console.log(a);    console.log(this.a);    var a;    console.log(a);}test();new test();</code></pre><p>答：test()的输出为0, 1, 0;<br>new test()的输出为0, undefined, 0。</p><p>##7.<br>    function foo(){<br>        f = function(){<br>            console.log(‘1’);<br>        }<br>        return this;<br>    }<br>    foo.f = function(){<br>        console.log(‘2’);<br>    }<br>    foo.prototype.f = function(){<br>        console.log(‘3’);<br>    }<br>    var f = function(){<br>        console.log(‘4’);<br>    }<br>    function f(){<br>        console.log(‘5’);<br>    }<br>//写出下面的结果<br>foo.f();<br>f();<br>foo().f();<br>new foo.f();<br>new foo().f();<br>new new foo().f();</p><p>写出结果说明原因</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;js自测题的作答与分析&quot;&gt;&lt;a href=&quot;#js自测题的作答与分析&quot; class=&quot;headerlink&quot; title=&quot;js自测题的作答与分析&quot;&gt;&lt;/a&gt;js自测题的作答与分析&lt;/h1&gt;&lt;h2 id=&quot;1&quot;&gt;&lt;a href=&quot;#1&quot; class=&quot;header
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>消除间隙的分享</title>
    <link href="http://github.com/shenjiayao-sjy/shenjiayao.github.io/2019/11/08/%E6%B6%88%E9%99%A4%E9%97%B4%E9%9A%99%E7%9A%84%E5%88%86%E4%BA%AB/"/>
    <id>http://github.com/shenjiayao-sjy/shenjiayao.github.io/2019/11/08/消除间隙的分享/</id>
    <published>2019-11-07T16:48:38.000Z</published>
    <updated>2019-11-16T14:49:35.241Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题：采用inline-block布局时会出现div之间有间隙的情况"><a href="#问题：采用inline-block布局时会出现div之间有间隙的情况" class="headerlink" title="问题：采用inline-block布局时会出现div之间有间隙的情况"></a>问题：采用inline-block布局时会出现div之间有间隙的情况</h1><p>如以下图片所示<br><img src="https://raw.githubusercontent.com/shenjiayao-sjy/markdown-photos/master/exm.png" alt="实例"></p><p>这是它的css</p><pre><code>.search{    width: 400px;    height: 80px;    display: inline-block;    vertical-align: bottom;}.searchborder{    border: solid 3px #F44336;    height: 35px;    width: 250px;    vertical-align: bottom;}.searchlogo{    height: 35px;    vertical-align: bottom;}.inline-block{    display: inline-block;}</code></pre><p>它的html</p><pre><code>&lt;div class=&quot;search&quot;&gt;    &lt;div class=&quot;inline-block&quot;&gt;        &lt;input type=&quot;search&quot; class=&quot;searchborder&quot;&gt;    &lt;/div&gt;    &lt;div class=&quot;inline-block&quot;&gt;        &lt;img src=&quot;photo/search.png&quot; class=&quot;searchlogo&quot;&gt;    &lt;/div&gt;&lt;/div&gt;</code></pre><h1 id="消除间隙的方法"><a href="#消除间隙的方法" class="headerlink" title="消除间隙的方法"></a>消除间隙的方法</h1><ol><li>font-size法</li><li>移除空格法</li><li>margin负值法</li><li>无闭合标签法</li><li>letter-spacing法</li><li>Word-spacing法</li></ol><h2 id="font-size法"><a href="#font-size法" class="headerlink" title="font-size法"></a>font-size法</h2><p>我们可以通过对父元素使用 <code>font-size:0</code>  实现消除间隙。<br>如以下代码所示</p><pre><code>.search{    width: 400px;    height: 80px;    display: inline-block;    vertical-align: bottom;    font-size: 0; }</code></pre><p>效果图为<br><img src="https://raw.githubusercontent.com/shenjiayao-sjy/markdown-photos/master/exm2.png" alt="实例"></p><h2 id="移除空格法"><a href="#移除空格法" class="headerlink" title="移除空格法"></a>移除空格法</h2><p>元素间留白间距出现的原因就是标签段之间的空格，因此，<strong>去掉HTML中的空格</strong>，自然间距就没了。考虑到代码可读性，显然连成一行的写法是不可取的，我们可以这么写：</p><pre><code>&lt;div class=&quot;search&quot;&gt;    &lt;div class=&quot;inline-block&quot;&gt;        &lt;input type=&quot;search&quot; class=&quot;searchborder&quot;&gt;&lt;/div&gt;&lt;div class=&quot;inline-block&quot;&gt;        &lt;img src=&quot;photo/search.png&quot; class=&quot;searchlogo&quot;&gt;&lt;/div&gt;&lt;/div&gt;</code></pre><p>或者这么写：</p><pre><code>&lt;div class=&quot;search&quot;&gt;    &lt;div class=&quot;inline-block&quot;&gt;        &lt;input type=&quot;search&quot; class=&quot;searchborder&quot;&gt;&lt;/div        &gt;&lt;div class=&quot;inline-block&quot;&gt;&lt;img src=&quot;photo/search.png&quot; class=&quot;searchlogo&quot;&gt;&lt;/div&gt;&lt;/div&gt;</code></pre><p>或者借助HTML注释：</p><pre><code>&lt;div class=&quot;search&quot;&gt;    &lt;div class=&quot;inline-block&quot;&gt;        &lt;input type=&quot;search&quot; class=&quot;searchborder&quot;&gt;    &lt;/div&gt;&lt;!--    --&gt;&lt;div class=&quot;inline-block&quot;&gt;        &lt;img src=&quot;photo/search.png&quot; class=&quot;searchlogo&quot;&gt;    &lt;/div&gt;&lt;/div&gt;</code></pre><p>等。可实现理想效果。</p><h2 id="margin负值法"><a href="#margin负值法" class="headerlink" title="margin负值法"></a>margin负值法</h2><p>我们可以通过<strong>修改元素的左右margin</strong>，使其成为<strong>负值</strong>，从而实现间隙的消除，如下：</p><pre><code>.inline-block{    display: inline-block;    margin-right: -5px;}</code></pre><p><strong>注意</strong>：margin负值的大小并不确定，与上下文的字体和文字大小相关，需自己调试到理想效果。<br>由于外部环境的不确定性，以及最后一个元素多出的父margin值等问题，这个方法不适合大规模使用。</p><h2 id="无闭合标签法"><a href="#无闭合标签法" class="headerlink" title="无闭合标签法"></a>无闭合标签法</h2><p>我们可以通过去除子元素的闭合标签来实现效果，由于我的例子并非单纯的div，img与input无闭合标签，下面采用其他例子：</p><pre><code>&lt;div class=&quot;space&quot;&gt;    &lt;a href=&quot;##&quot;&gt;惆怅    &lt;a href=&quot;##&quot;&gt;淡定    &lt;a href=&quot;##&quot;&gt;热血&lt;/a&gt;&lt;/div&gt;</code></pre><p>考虑到IE6/IE7浏览器的兼容性，最后一个列表的标签的结束（闭合）标签不能丢。<br>在HTML5中，我们可以直接：</p><pre><code>&lt;div class=&quot;space&quot;&gt;    &lt;a href=&quot;##&quot;&gt;惆怅    &lt;a href=&quot;##&quot;&gt;淡定    &lt;a href=&quot;##&quot;&gt;热血&lt;/div&gt;</code></pre><h2 id="letter-spacing法"><a href="#letter-spacing法" class="headerlink" title="letter-spacing法"></a>letter-spacing法</h2><p>我们可以通过给父元素设置letter-spacing的负值从而来消除间隙。<br>如以下代码所示：</p><pre><code>.search {    width: 400px;    height: 80px;    display: inline-block;    vertical-align: bottom;    letter-spacing: -4px;}</code></pre><p><strong>注意</strong>：此方法与margin负值法一样需根据实际情况调整负值的大小。负值小到理想值时再变小也不会有变化。</p><h2 id="Word-spacing法"><a href="#Word-spacing法" class="headerlink" title="Word-spacing法"></a>Word-spacing法</h2><p>我们可以通过给父元素设置Word-spacing的负值来消除间隙。<br>如以下代码所示：</p><pre><code>.search {    width: 400px;    display: inline-block;    height: 80px;    vertical-align: bottom;    word-spacing: -4px;}</code></pre><p><strong>注意</strong>：此方法与上一种方法也大同小异，也需自行调整。负值小到理想值时再变小也不会有变化。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>目前我只找到了以上几种方法，仍待补充。<br>总的来说，移除空格和无闭合标签法较不为推荐，改变格式后容易出错，其它几种都比较方便。<br>参考文献  <a href="https://www.zhangxinxu.com/wordpress/2012/04/inline-block-space-remove-%E5%8E%BB%E9%99%A4%E9%97%B4%E8%B7%9D/" target="_blank" rel="noopener">《去除inline-block元素间间距的N种方法》By赵鑫旭</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;问题：采用inline-block布局时会出现div之间有间隙的情况&quot;&gt;&lt;a href=&quot;#问题：采用inline-block布局时会出现div之间有间隙的情况&quot; class=&quot;headerlink&quot; title=&quot;问题：采用inline-block布局时会出现d
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://github.com/shenjiayao-sjy/shenjiayao.github.io/2019/11/03/hello-world/"/>
    <id>http://github.com/shenjiayao-sjy/shenjiayao.github.io/2019/11/03/hello-world/</id>
    <published>2019-11-02T16:31:28.116Z</published>
    <updated>2019-11-02T16:31:28.116Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
